//
//  HUD.swift
//  FortuneCookies
//
//  Created by muntyanu on 20.10.2022.
//

import SpriteKit

class HUD: SKNode {
    
    let tapLabel = SKLabelNode()    
    var predictionsArray = ["–ù—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å —Ç–æ, —á—Ç–æ —Ç—ã –¥–æ–ª–∂–µ–Ω –¥–µ–ª–∞—Ç—å. –ò –ø—É—Å—Ç—å –≤—Å–µ –±—É–¥–µ—Ç —Ç–∞–∫, –∫–∞–∫ –±—É–¥–µ—Ç", "–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ—Å—å —Å –∫–æ–Ω–µ—á–Ω–æ–π —Ü–µ–ª—å—é ‚Äì –∏ —É –≤–∞—Å –ø–æ—è–≤–∏—Ç—Å—è —à–∞–Ω—Å –Ω–∞ –ø–æ–±–µ–¥—É.", "–ß—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–∏—Å—Ç–∏–Ω–µ —Å—á–∞—Å—Ç–ª–∏–≤—ã–º ‚Äì –≤–ª–∞—Å—Ç–≤—É–π –Ω–∞–¥ —Å–≤–æ–∏–º–∏ –ø–æ–º—ã—Å–ª–∞–º–∏", "–õ—É—á—à–µ —Å–¥–µ–ª–∞—Ç—å –∏ –ø–æ–∂–∞–ª–µ—Ç—å –æ —Å–¥–µ–ª–∞–Ω–Ω–æ–º, —á–µ–º –Ω–µ —Å–¥–µ–ª–∞—Ç—å –∏ —Å–æ–∂–∞–ª–µ—Ç—å –æ –Ω–µ —Å–¥–µ–ª–∞–Ω–Ω–æ–º.", "–ß—Ç–æ –±—ã –Ω–∏ —Å–ª—É—á–∏–ª–æ—Å—å, –≤—Å–µ –≤ –∫–æ–Ω–µ—á–Ω–æ–º –∏—Ç–æ–≥–µ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –ª—É—á—à–µ–º—É.", "–°—Ç–æ—è –Ω–∞ –º–µ—Å—Ç–µ, –¥–≤–∏–≥–∞—Ç—å—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–∞–¥.", "–ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —ç—Ç–æ —Ç–≤–æ–µ, –Ω–∏–∫–æ–≥–æ –Ω–µ —Å–ª—É—à–∞–π - —Ä–∏—Å–∫–Ω–∏!", "–ù–µ –ø–æ–∑–≤–æ–ª—è–π –ø–ª–æ—Ö–∏–º –¥–Ω—è–º –≤–Ω—É—à–∏—Ç—å —Ç–µ–±–µ, —á—Ç–æ –ø–ª–æ—Ö–∞ —Å–∞–º–∞ –∂–∏–∑–Ω—å.", "–ù–∞–π–¥–∏ —Ç–æ–≥–æ, —Å –∫–µ–º –∑–∞—Ö–æ—á–µ—à—å —Å—Ç–∞—Ç—å –Ω–∞–º–Ω–æ–≥–æ –ª—É—á—à–µ —á–µ–º –≤—á–µ—Ä–∞.", "–ö—Ç–æ-—Ç–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–∞ —Ç–≤–æ—é –ø–æ–¥–¥–µ—Ä–∂–∫—É. –ù–µ –æ—Ç–∫–∞–∑—ã–≤–∞–π.", "–ù–µ –∑–∞–±—ã–≤–∞–π –æ –≥–ª–∞–≤–Ω–æ–º!", "–ù–µ –Ω—É–∂–Ω–æ –Ω–∏—á–µ–≥–æ –ø—Ä–æ—Å–∏—Ç—å —É —Å–∏–ª—å–Ω—ã—Ö. –ó–∞—Ö–æ—Ç—è—Ç ‚Äì —Å–∞–º–∏ –¥–∞–¥—É—Ç.", "–°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—à–Ω–æ–π –¥–æ—Ä–æ–≥–∏ –ª–µ–∂–∏—Ç –≤ –µ–µ –Ω–∞—á–∞–ª–µ", "–†–∞–∑–¥–µ–ª–∏—Ç–µ –∑–∞–¥–∞—á—É –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏–µ –∑–∞–¥–∞—á–∫–∏, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –Ω—É–∂–Ω–æ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è, —á—Ç–æ–±—ã –¥–æ–±–∏—Ç—å—Å—è —É—Å–ø–µ—Ö–∞, –∏ —Ä–µ—à–∞–π—Ç–µ –∏—Ö –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, –æ–¥–Ω—É –∑–∞ –¥—Ä—É–≥–æ–π.", "–í—Ä–∞–≥–æ–≤ –Ω—É–∂–Ω–æ –ª—é–±–∏—Ç—å, –∏—Ö —ç—Ç–æ –±–µ—Å–∏—Ç.", "–í—ã—Å–æ–∫–æ –æ—Ü–µ–Ω–∏–≤–∞—è —Å–µ–±—è, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å —Å–ø—Ä–æ—Å–æ–º.", "–í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≤–∞–º –ø—Ä–æ—Å—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø—Ä–∏–ª–∏–≤ —Å–≤–µ–∂–µ–π —ç–Ω–µ—Ä–≥–∏–∏.", "–í–∞—à –ø—É—Ç—å –≤–µ—Ä–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –µ–≥–æ —Å—Ç–æ–ª—å –∂–µ –Ω–∞—Å—Ç–æ–π—á–∏–≤–æ.", "–û—Å–≤–µ—Ç–∏—Ç–µ —Ç–∞–π–Ω—É—é —á–∞—Å—Ç—å —Å–≤–æ–µ–≥–æ –±—ã—Ç–∏—è.", "–°–Ω–∞—á–∞–ª–∞ –¥—É–º–∞–π—Ç–µ, –ø–æ—Ç–æ–º –¥–µ–π—Å—Ç–≤—É–π—Ç–µ.", "–¢–≤–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ –≤ —Ç–æ–º, —á—Ç–æ —Ç—ã –ª—é–±–∏—à—å –¥–µ–ª–∞—Ç—å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –Ω–∞ —Å–≤–µ—Ç–µ."]
    
    func configureText(textForTapLabel: String) {
        tapLabel.text = textForTapLabel
        tapLabel.fontColor = UIColor(named: "text")
        tapLabel.fontSize = 30
        tapLabel.position = CGPoint(x: screen.width/2, y: screen.height/10)
        tapLabel.zPosition = 10
        addChild(tapLabel)
    }
    
    func configureMain() {
        let restart = SKLabelNode(text: "üîÑ")
        restart.fontSize = 50
        restart.position = CGPoint(x: screen.width/10, y: screen.height-screen.height/10)
        restart.zPosition = 10
        restart.name = "restart"
        addChild(restart)
        
        let text = SKLabelNode(text: "–ü–µ—Ä–µ–º–µ—à–∞—Ç—å")
        text.fontSize = 30
        text.fontColor = UIColor(named: "text")
        text.position = CGPoint(x: screen.width/2, y: screen.height-screen.height/10)
        text.zPosition = 10
        text.name = "restart"
        addChild(text)
    }
    
    func configureDetail() {
        let back = SKSpriteNode(imageNamed: "blackBackground")
        back.setScale(10)
        back.zPosition = 1
        self.addChild(back)
        
        let text = SKLabelNode(text: self.predictionsArray.randomElement())
        text.position = CGPoint(x: UIScreen.main.bounds.size.width/2, y: UIScreen.main.bounds.size.height/2)
        text.preferredMaxLayoutWidth = screen.width-35
        text.numberOfLines = 0
        text.fontColor = .white
        text.zPosition = 2
        self.addChild(text)
    
        let musicURL = Bundle.main.url(forResource: "sound", withExtension: "mp3")
        let sound = SKAudioNode(url: musicURL!)
        sound.autoplayLooped = false
        sound.run(SKAction.play())
        self.addChild(sound)
    }
}
